// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package sqlite

import (
	"context"
	"time"

	"github.com/patraden/ya-practicum-gophkeeper/pkg/domain/user"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (id, username, verifier, role, salt, bucketname, created_at, updated_at)
VALUES (?, ?, ?, ?, ?, ?, ?, ?)
`

type CreateUserParams struct {
	ID         string
	Username   string
	Verifier   []byte
	Role       user.Role
	Salt       []byte
	Bucketname string
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser,
		arg.ID,
		arg.Username,
		arg.Verifier,
		arg.Role,
		arg.Salt,
		arg.Bucketname,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}

const createUserToken = `-- name: CreateUserToken :exec
INSERT INTO users_server_tokens (user_id, token, ttl)
VALUES (?, ?, ?)
`

type CreateUserTokenParams struct {
	UserID string
	Token  string
	Ttl    int64
}

func (q *Queries) CreateUserToken(ctx context.Context, arg CreateUserTokenParams) error {
	_, err := q.db.ExecContext(ctx, createUserToken, arg.UserID, arg.Token, arg.Ttl)
	return err
}

{
  "id" : "42adb5dd-66a0-4fe0-b0db-d7b58f42072a",
  "realm" : "gophkeeper",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "8b901996-08af-407b-9929-81f1aa0a712a",
      "name" : "default-roles-gophkeeper",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "admin", "uma_authorization" ],
        "client" : {
          "realm-management" : [ "view-authorization", "create-client", "manage-users", "view-realm", "manage-events", "query-clients", "realm-admin", "view-clients", "view-identity-providers", "manage-realm", "impersonation", "view-events", "query-realms", "query-users", "view-users", "manage-authorization", "query-groups", "manage-clients", "manage-identity-providers" ],
          "broker" : [ "read-token" ],
          "account" : [ "delete-account", "view-profile", "manage-account-links", "view-groups", "view-consent", "manage-account", "view-applications", "manage-consent" ]
        }
      },
      "clientRole" : false,
      "containerId" : "42adb5dd-66a0-4fe0-b0db-d7b58f42072a",
      "attributes" : { }
    }, {
      "id" : "5e90004d-9796-4a63-810b-6421801bf120",
      "name" : "admin",
      "description" : "${role_admin}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "42adb5dd-66a0-4fe0-b0db-d7b58f42072a",
      "attributes" : { }
    }, {
      "id" : "dea12228-2c26-41e4-8dc4-a2bab7df817e",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "42adb5dd-66a0-4fe0-b0db-d7b58f42072a",
      "attributes" : { }
    }, {
      "id" : "ed4eaf72-f56a-4e37-b951-a5909e59ecef",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "42adb5dd-66a0-4fe0-b0db-d7b58f42072a",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "12edc763-3614-4874-83f7-83248e77bcab",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "fb8e0af5-c635-47d0-ab92-e9574f7b1bb5",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "f676b3ea-b919-44b6-8be3-329dc1c5c313",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "168fc60b-5919-4c89-86a6-cd6ff7ed160d",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "509ed42c-34bc-4cde-bc29-5a03a0fd0930",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "e861fb6e-accf-412b-bf55-3c7550c759ef",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "006793f0-ea66-4169-9f2e-a8c86dad03f3",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "b565e288-a2e5-45b4-84f1-c3243066edd4",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "c4e35c90-c420-4c75-87ba-497ab31c5797",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "880603fe-2260-43aa-a781-f39349a362b3",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "7f6483f1-20f3-452e-ac97-1323d9bd5c68",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "5287bb83-30e5-497a-942c-5f143bb45630",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "71302aa1-1ac6-4c9c-9560-e49d7df492c9",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "3186447e-aba3-40fa-a3c8-77e94a064d23",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "7b0610d9-770e-4eed-8730-f775464f91b9",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "2b2e029d-fb51-4b8b-a619-1d1406e5eb94",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "d3430460-d909-404d-a310-c641edbef2eb",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "1afa4dad-ce4b-40fc-9fcf-516adc0028ae",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-identity-providers", "view-authorization", "manage-realm", "impersonation", "view-events", "create-client", "manage-users", "query-realms", "query-users", "view-users", "view-realm", "manage-events", "manage-authorization", "query-clients", "query-groups", "manage-clients", "manage-identity-providers", "view-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      }, {
        "id" : "b9c004ef-e561-4baa-ab10-381e5bb2b4e7",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "minio" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "ee4c099f-3c54-4fe0-9297-7f10a52b9b63",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3e0ade20-f049-416e-bdf2-1e997e5feafc",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "d6a4ca58-b4c3-47dd-9167-5d3e4a7c94cb",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "6e03fe45-43b5-42ed-a0de-aa6ac6e991ce",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "bdab1e20-e4e2-4f9e-9adf-e830df80b5de",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "28d08857-3ae4-4efb-beb6-8c6235d682f9",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "98bd6d3f-5749-478a-83de-ba2380e6cf91",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "da85dc5e-5194-4701-8299-5e6dce240df2",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "ac7fce17-3f07-4fa3-8a94-b96fdf11ead0",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      }, {
        "id" : "33f3af9f-fe1d-4aaf-bb1c-50a5866dc457",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fbb60149-254a-4467-8cad-26945e940f33",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "2cf2112a-338b-409b-a43e-d86ce612cd2b",
    "name" : "minio_clients_group",
    "path" : "/minio_clients_group",
    "attributes" : {
      "policy" : [ "readonly" ]
    },
    "realmRoles" : [ ],
    "clientRoles" : { },
    "subGroups" : [ ]
  } ],
  "defaultRole" : {
    "id" : "8b901996-08af-407b-9929-81f1aa0a712a",
    "name" : "default-roles-gophkeeper",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "42adb5dd-66a0-4fe0-b0db-d7b58f42072a"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppMicrosoftAuthenticatorName", "totpAppGoogleName", "totpAppFreeOTPName" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "dfea51e3-3e6d-4533-a113-eb2aa8a5679e",
    "createdTimestamp" : 1750064645271,
    "username" : "minio_client",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "",
    "lastName" : "",
    "attributes" : {
      "policy" : [ "readwrite" ]
    },
    "credentials" : [ {
      "id" : "a86dca91-7c1c-4f8b-aff8-44e51264f7e4",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1750064702363,
      "secretData" : "{\"value\":\"Csf/hQ09b+q1VsI1XlcmSQtf7OVjCR4WYZ/biLXcGo0=\",\"salt\":\"xKvI3QoxLPZGYvxYRI2sVQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-gophkeeper" ],
    "clientRoles" : {
      "realm-management" : [ "manage-users" ],
      "account" : [ "manage-account" ]
    },
    "notBefore" : 0,
    "groups" : [ "/minio_clients_group" ]
  }, {
    "id" : "20fda8a3-7ce6-4144-8cf9-e35afb1ad1f1",
    "createdTimestamp" : 1750349430495,
    "username" : "service-account-minio",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : true,
    "firstName" : "",
    "lastName" : "",
    "serviceAccountClientId" : "minio",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-gophkeeper" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "fbb60149-254a-4467-8cad-26945e940f33",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/gophkeeper/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/gophkeeper/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "919d23aa-e405-4c1e-b676-fab23c1c8da9",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/gophkeeper/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/gophkeeper/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "a64116ca-7cce-4da5-822f-fd3b4131d9e2",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "710a1f1c-c8e6-421c-b07c-014374154338",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3e0ade20-f049-416e-bdf2-1e997e5feafc",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c9eba990-aa56-405a-8852-c857f202dcaf",
    "clientId" : "minio",
    "name" : "minio client",
    "description" : "",
    "rootUrl" : "http://localhost:8080",
    "adminUrl" : "/admin/",
    "baseUrl" : "/realms/gophkeeper/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : true,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "FRwPgFU1i6reAgN6lH2iM4qgQZeAMjSv",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "86400",
      "client.secret.creation.time" : "1750064374",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "use.jwks.url" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "require.pushed.authorization.requests" : "false",
      "acr.loa.map" : "{}",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "f73ad092-19fb-4ea6-97b7-fa1fa3ad5f12",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f20f1626-847b-4ebf-8078-1d6fb23f17e5",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7ba6c71b-dcbd-4cbf-84f4-977ea9277d7f",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "minio-authorization", "email", "minio-admin-api-access" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "14f541ea-eb6f-47eb-8d49-b53c703de811",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "341e9735-b986-4d35-a272-b5fb01ae096e",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/gophkeeper/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/gophkeeper/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "2fdf0aa1-f19d-461b-a77e-b2e839d57c1c",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "abe203c5-f873-47ed-af5a-c4ff1c7eaf8f",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "6d74a736-a71f-401f-a37f-2fb5f91b761f",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c83fa549-4181-46bc-ad61-c16e7b3a010d",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ef2fa295-d63f-435f-b818-544eac7127e6",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "abf37f0e-68d5-4244-ae81-1e9a3220c93e",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "a368adc5-49f7-4a57-a08e-6fe7170b1c1d",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "68951e45-3653-420e-999b-b25958f3e10c",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "4b5dcd29-c094-4c00-9e54-e8ac561cc74a",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "5042aebd-00e9-42d5-958b-3d7d76d8e249",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "07f7d8f8-162e-4962-8119-21bdecda6208",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "8b48e61b-421e-4e06-88b3-f00409092c27",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "af70881f-ed92-41c0-ade4-ad9f369a8ab8",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "d32fd2f2-38e1-4cd0-a537-ab4dc40eb5fa",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "50b7c480-5a25-480d-a250-f179d886d43c",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "903c518a-cbce-489e-8f94-a7651323db1e",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "560be9fe-bd1f-413c-b83d-1635f2380041",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "a1684747-00e2-4244-8941-5c6e30042aca",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "0749412b-e79d-44c2-ac54-4aba17b13b7d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "5af84258-0b8f-4698-8d8b-86b0ddae2d0f",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "93f743d4-c879-4681-80ec-c1676e23dc9a",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "6e9ca17f-d118-4c07-b602-bcf08a83b953",
    "name" : "minio-admin-api-access",
    "description" : "",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "db732984-98aa-4cfa-925e-d62ffd2d1d62",
      "name" : "minio-admin-api-access-mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "security-admin-console",
        "id.token.claim" : "false",
        "access.token.claim" : "false",
        "userinfo.token.claim" : "false"
      }
    } ]
  }, {
    "id" : "33891123-5e88-4b14-bf9a-bd9d90a8d26f",
    "name" : "minio-authorization",
    "description" : "Adds minio policy attribute",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "cab719f1-33c5-41fb-8993-275c650500c0",
      "name" : "minio-policy-mapper",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "true",
        "userinfo.token.claim" : "false",
        "multivalued" : "true",
        "user.attribute" : "policy",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "policy"
      }
    } ]
  }, {
    "id" : "38274360-f896-42cb-91bc-792686006697",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "203d48d2-ee92-442d-ae04-0cc641962f87",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "edc86b26-e091-4037-b1bb-73eb6aa12078",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "173588d2-9765-4e93-8e29-2cbeba6cdcf2",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3cb4989f-32fa-4e98-9d7e-bbed4e1728d1",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "2c22106c-2924-4299-af33-4bc772fcc1ea",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "86efa9a0-0f45-4751-8e4d-fd2c212788e4",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2695b58a-f252-4d13-b9f9-1fab8a474047",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3d1bf4a0-3a9e-458b-a05c-847337a6d6e0",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "675777a6-f08a-4dc8-a7c9-650e82578aae",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6160c731-dfe6-4187-887e-eefba880a48b",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "260ff34a-5d83-41b2-96d9-e1c9e2634b69",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7403b2ae-4b50-478d-9698-aad646afdd17",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "129b86af-e449-40f4-b46d-5f230747228b",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "79ee0654-9472-4775-957b-8271b17c5cea",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ef8b7417-0b12-449b-b285-715b5e8b9800",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3945e744-ca3b-45fa-b7ea-15b60813961b",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr", "minio-authorization", "minio-admin-api-access" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "dddabd58-f866-4d2d-8149-d8624fe7edc9",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "c3eb2570-101b-4ac7-8215-61b13f3e4f51",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "f68e0afb-0482-4a08-84fd-b71e971bfe30",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "04d9dfb0-b2db-4e1c-a7fe-4d87a5883067",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "0c4dfe18-4b1c-4d5b-afff-4d0978dab38d",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "06d685f0-a134-41fc-9efa-5813f6ea2086",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "id" : "24e5e59e-705a-4b61-bc8f-907de06a1be4",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "a0f75b52-70c8-4f04-9aa3-75cd7c554188",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "bf3800e6-65ea-4305-a911-e7fe3e0ce7e3",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEA0XtZFoumLFqTJW+5zIA+ViLDPjC1kRz1cGRrvAjaj243d3JY5bnw2zUYW2tKqY6PT+QGBEkDUZyyVCk2AXu6+sHv2N3r2uIDowxJTUaz6kTL2bOC19SytwN0o7bMtv3699/mdXWPHzQt+ypabycZCuzmNPRZtdUmSbAFDwIzu+iSzjqkdjgPS6H6QF5GrfdzF8HIFvPBtwaB01R4Ipgk9XGZ4iBj9DykY85IMNCwNGEyzUC599u0nrNYVar+SvLx+xDklPVOa7t1RJR9BTRJkNSysX9n1HGBrAbDlWqv2I5HIIyYSV3lRKRvpSeibJWJ6XO6tsDT6zlnkU9hwT3KvQIDAQABAoIBAEnuUANCdvu5Xaw9MaQocJeivihhNXtI7qBjeJhMwaIUQnQgAZrWFFiw9O8yvw93VkHaVntFr2uqs087milM2zErp/PwYpCF6sWtDOO+e7nG3PDwx1FX6ljn2c77sWU13tCDj0jOHBxlpIK7sF4BPPfbouV2hYDEgLZJ7occ/lgm+akItvR0p09LkdIPTdnGnlaeD5sk/HlWciO/lKvU0tt4ynKXdRg1W/LTR98Tdzw687b/++I/IpGZa/OH+YnRfkJPGEazHO3jfgGlJWq2rrR32eN2ANQhDv3E57oJAUDKfdBy2VHNzH43UdT6ekH1wcoh4mTSvm1Tp9TdUeM2LAsCgYEA8bEK7oVDHJFCx3SQMabAzVRe4QBwb480BD5N4pKm4XSA/7xCYg+r083wLklmT92nY3eUspSjopm+lGglZg+XvXX57iAqVIxWOs9K87bPdOSp8q3iMo9qE8A+eazo7xHaw7lJ2toUae62jCXEe19ASxLRrr/uDHxd83Aw+vY7WccCgYEA3eImgfgRH+icOgtXFCiP4gg0Fm32DTyA/wsyk0nriKpBZ+OPJombwP5ymv+fkPV2ccVXb8B3uw9jTr6h8eLJ8kNGVr7eEpq1IsKB/+npLycYKxP9lgaRPiF8bB7VBr7bVGXR7kbQrlqeYVxlx1MbMiqpA4n9Md/UHodA79JMF1sCgYBOM3+a/4lgc+vMh32kYxUdGsB8Qt0ea5JkERi4R8UxS7X1iR9dhT6OkKK3B07QZqKjf2ygf5GWqfJNKIl5RXBOgB63Grc3lhTMgIf65Vqostf+Sp7WxyqGa3yLeBQCTp+fFpO7+TYDtJZiMFIrrP0rjVJFHZrTdWYcv19JxGQdvwKBgBGcq9XRLPrNaekpkUXmWlVktU26eLdgQBT+fIs4aNu2N+7ZHzm93oEZMVugQrgs47PwKBqUumw8snNDqnMav1Ddii3EhLgRU6NosQzxMjMt9TsmIRDRgKHf4pJqeBpK9/nhAyLYuCO+yaeMv/9sV1JKFJRVVaWp0JqDveHLXYLVAoGAB9FPRCCsE7fnqTPe9VxS7eUryWWq2v3ZymqdlyBV2qerUswdeRah0fm4hzc8v6FQ1USaOy+qAx+03JeJbQpwCcXjRZ4rf9MCdckv5jycyxh7kcty4VOuTHFpRcfIuYdxMAv8XYpq2+GP9ur0H2ZNAPEADyIvNHDmkkSieJtjFuU=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGXd/TtsTANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApnb3Boa2VlcGVyMB4XDTI1MDYxNjA4NTUyOVoXDTM1MDYxNjA4NTcwOVowFTETMBEGA1UEAwwKZ29waGtlZXBlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANF7WRaLpixakyVvucyAPlYiwz4wtZEc9XBka7wI2o9uN3dyWOW58Ns1GFtrSqmOj0/kBgRJA1GcslQpNgF7uvrB79jd69riA6MMSU1Gs+pEy9mzgtfUsrcDdKO2zLb9+vff5nV1jx80LfsqWm8nGQrs5jT0WbXVJkmwBQ8CM7voks46pHY4D0uh+kBeRq33cxfByBbzwbcGgdNUeCKYJPVxmeIgY/Q8pGPOSDDQsDRhMs1AuffbtJ6zWFWq/kry8fsQ5JT1Tmu7dUSUfQU0SZDUsrF/Z9RxgawGw5Vqr9iORyCMmEld5USkb6UnomyVielzurbA0+s5Z5FPYcE9yr0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAqDujtyVF27e2O2xbNLjP/3grJAJagkdM/y9bSK4EWpuUQj3JG+dgAB3GkDMw6a7cFcDmyUXA31a+3f4UZN6eGvNTHNk7dgTHdVxLjEMaWE0IE6bsoDiTICONN9ZfqQc8DfiLw+8K9eDzzg+Ju0icOEMrSfql7V3/QpsrE8JJk/pxhKb5lVpt9T8gcDke+ky1bNvPek84Jl2yohjFtdS8RZjT3WSGyOurxiayq08bk+cLKQK4c8HV2We53oznc74wGYR2XWbL9N23K3aoyKsT+5UQcz4/oqZ90DXFq89CF9YckYVS8vsHuapxruSFYcv1gDHVyiINt7ZY5tMplMuvvg==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "3df351e9-2b9b-4be2-9a03-a2d5c5647008",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "40762178-d924-4b00-a711-950e59ba6d5c" ],
        "secret" : [ "ymyFyDIiLshWTh2CXCWhCQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "aa9839e0-9fbc-486c-873a-4198ce8a1cb6",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "647fdbc6-e1bc-4633-bc4d-c032c7bd8a8a" ],
        "secret" : [ "6KE7gaeQPUKC6tiKoMCZEQOVHwlJDb44jqJyLdy11a-40W1uM9RR2NmMcCWIhGWo0s7EgEfzbYvr_KJepBsTjw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "18b377ac-fc2a-4780-badb-1292f472a4ce",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAvZk7asULQsLJK3pHUBY46hetDMEfFStMGMTOR0ZWaJnEljyKbKyNTmIy1uc4DBVxoLKVBY7PeqkGmR8JxUOxMDajTgdBregU7FwvfRWFk6xtlF6IgFFg56vcPjDo0NZnc4873OR+TVoVKnPjmjlcACMRJYu5ceTG3msQMz5G7ZKl8gaR6XwXrHvaqeIV1OPcfWlMY/k+4wpLhfL/diArjeq068n4zvMIXqB7l2I1tnt13rz2uCkcv7sbJTKEEiAErK7hMRYBnWWDfGJA30EjfCMSl9AZA0gCbdUf6WRrMoHUCHxACLkpehQWxuCZiQRrfODJ2iUzl/iF6AaDm5li0QIDAQABAoIBAAgjeonb9d6VxSDl2aEC2Zdi3ZcwkW8AZTHWMN/QxLphiPv4X7cugppP9ZkeYvXrbbpu/NEFdYgkY7FRXcMz/RHx80Y3YlOR8Zcu/D+rggjGwnI3l9BteqVqZ5F1dAKS6yBQw7CsHKfUkbGfnxa3SgKCsgruJoKD3+2B1wSVspTvPzWuqLB8BIWSkuXUIDTSwB8R4tiiOEdppvysq2Urdxe9DGkwlGb3bOnaV41XAYd9l9UrV1TMv9qkniK/KdgTm7r4ah2rrnIqYFwHHw/wI1aqCZgvGKD+bp9mZlNUiITotPRNoGhK+lm6Qx8wETHY4UIcuw/VR4zQ5MWu7Gp3+gkCgYEA787OzQwmjtrqnrLmA+dN1sHw896vfVtAaOcgRZzJTUk59kFEhmJpsaeRzCSsY45YdiQcVGBBLYdDHnAASpOc3eHGq7/GclKrs/u2KSVekb+pfllihMkk+/FwwO/JASY+YtU4c+eIcHq8H4xI3+veDDFZtVfiGk/K1Fr3UJU56JMCgYEAymaIeFImThtJVpKleL54aoovHfFDHvdASz18H9seD4RXQqqmR8StGCL6UbYJGPIXDG+cHIZYRxJ/RN+qb5SoJr1tCsY2sCNyyHohkJ9sHgVeJX7UTFRI1999EzcUv6NkprmsReT32A4aQ3a55/VppdIGqfOd061BwD2NrgCfWYsCgYB4JqIu0luvT7gl83STmBzD8UAMsBI1OLc42DSvLDMf6gSEgYcX3c8fF9pQ8j79UqC38LfQ/rkpWpAie/NpajQ6Z5jnDJsdRJaLAx7t1q9fTyxZBef6p91D7mCUCpAnZ0XytuomCGewE46WL++DYeZLLZ7I4VOD4164rysi0OHGyQKBgEai8g3L3cJ0k2u7UjSJhMzp3Pe+M4ajE7UuiBs2BY+0yB9kHxP898vsqR/LP/GMy65zZTAvUq+7LN+Ej57Rar3abivMcVmXhX+h4ATxHnJ7vReo476fy6xLOwNxvbQD+iSVuCHMfxLQGSpiTQ8+/tf4LIszkmlFliTZVpDbdsFxAoGAGoR/u/6JxjnRCp7NTniOZRT/RdtwiBNfiW98Se5Y1/cVmzCCrqc6m0OaCekEr/c84qCoHTSNLH+kzqdYrrU5Eqc56RSTaaISlI15rRWXgXfEfhRIJRehD2fPR1TOJPFuIO2Oio6j6CXKOHanHiAYLGpJOpoQ796+i60y8+Z0DV0=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGXd/Tt/jANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDApnb3Boa2VlcGVyMB4XDTI1MDYxNjA4NTUyOVoXDTM1MDYxNjA4NTcwOVowFTETMBEGA1UEAwwKZ29waGtlZXBlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL2ZO2rFC0LCySt6R1AWOOoXrQzBHxUrTBjEzkdGVmiZxJY8imysjU5iMtbnOAwVcaCylQWOz3qpBpkfCcVDsTA2o04HQa3oFOxcL30VhZOsbZReiIBRYOer3D4w6NDWZ3OPO9zkfk1aFSpz45o5XAAjESWLuXHkxt5rEDM+Ru2SpfIGkel8F6x72qniFdTj3H1pTGP5PuMKS4Xy/3YgK43qtOvJ+M7zCF6ge5diNbZ7dd689rgpHL+7GyUyhBIgBKyu4TEWAZ1lg3xiQN9BI3wjEpfQGQNIAm3VH+lkazKB1Ah8QAi5KXoUFsbgmYkEa3zgydolM5f4hegGg5uZYtECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAQ+7wwWhUcBo5i3V8Ep9z6OzAhtCtbXxJX1DnoVGSWP4Z8Eocd3N5FFFeHO6iiovN0qxzJ87O+NuxkpkwjmksC/RdKTXzQ/34mywEN++QQqzi8mm6lX9J0NnPnofzl56hdeWvA823QXMtgVLW/0DSJhw8WKdz4769uqw3gr6gAf++w+vRtYI3xB0UJpcz0OWvtsyRz9juu+joY1r1RsB85ZUPpfr+pquogS8x6UrlrHDU3Oa4NkZyzVTYYPu2Tu44eRzWu+c83qK3Df8dgGoxQMSCeaqf9YAQqcMRgcOlVFblhCjivlMRHeUViZsW4gVJ4Agw8jkCxDaJHvTdKHXYXw==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "7f3ebbd7-455b-47de-a3c2-7359612e36a1",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e54b752a-dcf7-463b-ae73-7a19b529b487",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "421e6d45-37eb-4523-9f2d-706de3423e5a",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d450cb52-d91c-4605-ba45-cbc8eba85d08",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6cbbbace-d7eb-497c-a7a4-b190177363e5",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "89dece99-3320-4bae-890b-2ff82cca57f5",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fb59ae88-0538-4f52-9738-1566ef623b21",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b37b661c-a6c8-49d4-a4f1-d815f8ae2e8a",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b1a9cde-4f06-4f00-9bc6-81ab7f71484c",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "801472f6-6f4b-4880-b7d4-6c6f4a482fbf",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "684de45f-d3ba-4580-bc6a-5b442201cd51",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "dd35e85f-fd91-448a-a8b3-c18937f42d0a",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c3a04790-d19e-4f35-a454-11a98c4648f0",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5bfd6c32-5293-49ec-a9de-ad8a3e72dc44",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c8e8bb8c-fa3d-42b9-a33e-84015cd1cb89",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a7b52f90-52c7-48d8-a124-6f90b5f0a4eb",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "51c7c64b-5ec4-4bb4-bb9b-ac326359193e",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f895c2d1-3852-412d-a965-b9be4b1a83cd",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c545e3c6-0138-46f9-8fa2-fd40a57d2f92",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4c0be704-647e-45d3-8477-7193577edb3d",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "c5363b1f-4298-491d-bcbb-0ccdaa2aac3f",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "288d1a6c-d7d9-4948-b7e5-9376a871467d",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "21.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}
version: "3.9"

services:
  certgen:
    build:
      context: ./..
      dockerfile: deployments/certgen/Dockerfile
    image: gophkeeper/certgen:latest
    profiles: ["manual"]
    container_name: certgen
    working_dir: /go/certgen
    entrypoint: >
      sh -c "
        mkdir -p /certs/gophkeeper/ca /certs/gophkeeper/minio /certs/gophkeeper/backend &&
        echo 'Generating CA certificate...' &&
        /usr/local/bin/certgen -org-name GophKeeper -ca &&
        mv ca-public.crt /certs/gophkeeper/ca/ &&
        mv ca-private.key /certs/gophkeeper/ca/ &&

        echo 'Generating GophKeeper certificate signed by CA...' &&
        /usr/local/bin/certgen -host 127.0.0.1,localhost -org-name GophKeeper -ca-cert /certs/gophkeeper/ca/ca-public.crt -ca-key /certs/gophkeeper/ca/ca-private.key &&
        mv public.crt /certs/gophkeeper/backend/ &&
        mv private.key /certs/gophkeeper/backend/ &&
        
        echo 'Generating GophKeeper Minio certificate signed by CA...' &&
        /usr/local/bin/certgen -host 127.0.0.1,localhost -org-name GophKeeper -ca-cert /certs/gophkeeper/ca/ca-public.crt -ca-key /certs/gophkeeper/ca/ca-private.key &&
        mv public.crt /certs/gophkeeper/minio/ &&
        mv private.key /certs/gophkeeper/minio/ &&
        echo 'CA certificate:' && cat /certs/gophkeeper/ca/ca-public.crt
      "
    volumes:
      - gophkeeper_certs:/certs
    networks:
      - gophkeeper
    restart: "no"
 
  postgres:
    container_name: postgres
    image: postgres:15.1
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1"]
      interval: 1s
      timeout: 3s
      retries: 5
      start_period: 15s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gophkeeper
  minio:
    image: quay.io/minio/minio
    container_name: minio
    env_file: .env
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001" --certs-dir="/etc/ssl/certs/minio/"
    restart: unless-stopped
    volumes:
      - minio_data:/data
      - gophkeeper_certs:/etc/ssl/certs
    networks:
      - gophkeeper
  gophkeeper-server:
    container_name: gophkeeper-server
    build:
      context: ./..
      dockerfile: deployments/server/Dockerfile
    restart: always
    environment:
      - SERVER_ADDRESS=${SERVER_ADDRESS}
      - DATABASE_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3200:3200"
    networks:
      - gophkeeper
    volumes:
      - gophkeeper_certs:/etc/ssl/certs
      - rek_shares:/app


volumes:
  postgres_data:
    name: gophkeeper_postgres_data
  minio_data:
    name: gophkeeper_minio_data
  gophkeeper_certs:
    name: gophkeeper_app_certs
  rek_shares:
    name: gophkeeper_rek_shares

networks:
    gophkeeper:
        name: gophkeeper